package com.company;
import java.nio.file.Paths;
import java.util.ArrayList;
import java.io.FileWriter; // Import the FileWriter class
import java.io.IOException;
import java.util.Scanner;

public class Main {
    static int max(int a, int b)
    {
        return (a > b) ? a : b;
    }
    static ArrayList<Integer> printknapSack(int W, int wt[],
                                            int val[], int n)
    {
        ArrayList<Integer> nums = new ArrayList<Integer>();
        int i, w;
        int K[][] = new int[n + 1][W + 1];

// Build table K[][] in bottom up manner
        for (i = 0; i <= n; i++) {
            for (w = 0; w <= W; w++) {
                if (i == 0 || w == 0)
                    K[i][w] = 0;
                else if (wt[i - 1] <= w)
                    K[i][w] = Math.max(val[i - 1] +
                            K[i - 1][w - wt[i - 1]], K[i - 1][w]);
                else
                    K[i][w] = K[i - 1][w];
            }
        }

// stores the result of Knapsack
        int res = K[n][W];
        w = W;
        for (i = n; i > 0 && res > 0; i--) {
            if (res == K[i - 1][w])
                continue;
            else {
                nums.add(wt[i - 1]);
                res = res - val[i - 1];
                w = w - wt[i - 1];
            }
        }
        return nums;
    }

    public static void main(String[] args) throws IOException {
        Scanner input = new Scanner(Paths.get("C:\\Users\\shdgh\\Desktop\\inst2.txt"));
        int  W= input.nextInt();
        int n = input.nextInt();;
        int wt[] = new int[n] ;
        int val[] = new int[n] ;
        int count=0 ;

        ArrayList<Integer> result =   printknapSack(W, wt, val, n);

        int binary[] = new int[val.length] ;
        for(int j=0; j< n;j++)
        {
            for(int i=0;i<result.size();i++){
                if( result.get(i) == wt[j]) binary[j] = 1;
                else{ binary[i]=0;};
            }

        }
        for(int i=0; i<n ;i++)
        {
            System.out.println(binary[i]);
        }



    }
    }

